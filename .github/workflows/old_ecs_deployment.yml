name: Deploy to Amazon ECS

on:
  push:
    branches: [ "#dont-trigger-this" ] #will fail anyway 
    paths:
    - frontend/**

#moved to secrets sience this repo is public :)
#env:
  # AWS_REGION: secrets   
  #CONTAINER_NAME: secrets
  # TASK_DEFINITION: secrets  
  # CONTAINER: secrets  
      
jobs:
  build:
    name: Deploy
    runs-on: ubuntu-latest
    defaults:
      run: 
        working-directory: ./frontend

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
  

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{env.CONTAINER_NAME}}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image-backend::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Change the image ID in the ECS task-definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{secrets.TASK_DEFINITION}}
        container-name: ${{secrets.CONTAINER}}
        image: ${{steps.build-image.outputs.image-backend}}
      
    - name: Deploy image to ECS service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        service: genesis-prod-backend-service  
        cluster: genesis-prod-cluster
        task-definition: ${{steps.task-def.outputs.task-definition}}